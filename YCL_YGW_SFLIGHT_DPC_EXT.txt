*----------------------------------------------------------------------*
*       CLASS YCL_YGW_SFLIGHT_DPC_EXT DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
class YCL_YGW_SFLIGHT_DPC_EXT definition
  public
  inheriting from YCL_YGW_SFLIGHT_DPC
  create public .

public section.

  methods CONSTRUCTOR .
protected section.

  methods SFLIGHTSET_GET_ENTITYSET
    redefinition .
  methods GETTOKENSET_GET_ENTITY
    redefinition .
private section.

  class YCL_ODATA_RT definition load .
  data PT_DATA_PROVIDER type YCL_ODATA_RT=>GTT_ODATA_PROVIDER .

  methods GET_CLASS_INSTANCE
    importing
      !IV_ENTITY_NAME type ACO_STRING
    returning
      value(RO_INSTANCE) type ref to YCL_ODATA_RT
    raising
      CX_SY_CREATE_OBJECT_ERROR .
ENDCLASS.



CLASS YCL_YGW_SFLIGHT_DPC_EXT IMPLEMENTATION.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method YCL_YGW_SFLIGHT_DPC_EXT->CONSTRUCTOR
* +-------------------------------------------------------------------------------------------------+
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD constructor.
    super->constructor( ).
  ENDMETHOD.                    "constructor


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Protected Method YCL_YGW_SFLIGHT_DPC_EXT->GETTOKENSET_GET_ENTITY
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_ENTITY_NAME                 TYPE        STRING
* | [--->] IV_ENTITY_SET_NAME             TYPE        STRING
* | [--->] IV_SOURCE_NAME                 TYPE        STRING
* | [--->] IT_KEY_TAB                     TYPE        /IWBEP/T_MGW_NAME_VALUE_PAIR
* | [--->] IO_REQUEST_OBJECT              TYPE REF TO /IWBEP/IF_MGW_REQ_ENTITY(optional)
* | [--->] IO_TECH_REQUEST_CONTEXT        TYPE REF TO /IWBEP/IF_MGW_REQ_ENTITY(optional)
* | [--->] IT_NAVIGATION_PATH             TYPE        /IWBEP/T_MGW_NAVIGATION_PATH
* | [<---] ER_ENTITY                      TYPE        YCL_YGW_SFLIGHT_MPC=>TS_GETTOKEN
* | [<---] ES_RESPONSE_CONTEXT            TYPE        /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
* | [!CX!] /IWBEP/CX_MGW_BUSI_EXCEPTION
* | [!CX!] /IWBEP/CX_MGW_TECH_EXCEPTION
* +--------------------------------------------------------------------------------------</SIGNATURE>
METHOD gettokenset_get_entity.
**TRY.
*CALL METHOD SUPER->GETTOKENSET_GET_ENTITY
*  EXPORTING
*    IV_ENTITY_NAME          =
*    IV_ENTITY_SET_NAME      =
*    IV_SOURCE_NAME          =
*    IT_KEY_TAB              =
**    io_request_object       =
**    io_tech_request_context =
*    IT_NAVIGATION_PATH      =
**  IMPORTING
**    er_entity               =
**    es_response_context     =
*    .
** CATCH /iwbep/cx_mgw_busi_exception .
** CATCH /iwbep/cx_mgw_tech_exception .
**ENDTRY.
  er_entity-operation = 'GET'.
  er_entity-token     = ycl_token=>generate( ).
ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Private Method YCL_YGW_SFLIGHT_DPC_EXT->GET_CLASS_INSTANCE
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_ENTITY_NAME                 TYPE        ACO_STRING
* | [<-()] RO_INSTANCE                    TYPE REF TO YCL_ODATA_RT
* | [!CX!] CX_SY_CREATE_OBJECT_ERROR
* +--------------------------------------------------------------------------------------</SIGNATURE>
METHOD get_class_instance.
  FIELD-SYMBOLS:
    <ls_data_provider> TYPE LINE OF ycl_odata_rt=>gtt_odata_provider.
  CLEAR ro_instance.
  READ TABLE pt_data_provider WITH KEY entity_name = iv_entity_name
                              ASSIGNING <ls_data_provider>.
  IF sy-subrc EQ 0.
    ro_instance = <ls_data_provider>-class_instatnce.
  ELSE.
    APPEND INITIAL LINE TO pt_data_provider ASSIGNING <ls_data_provider>.
    <ls_data_provider>-entity_name = iv_entity_name.
    <ls_data_provider>-class_name  = |YCL_ODATA_| && iv_entity_name.
    CREATE OBJECT <ls_data_provider>-class_instatnce TYPE (<ls_data_provider>-class_name).
    ro_instance = <ls_data_provider>-class_instatnce.
  ENDIF.
ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Protected Method YCL_YGW_SFLIGHT_DPC_EXT->SFLIGHTSET_GET_ENTITYSET
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_ENTITY_NAME                 TYPE        STRING
* | [--->] IV_ENTITY_SET_NAME             TYPE        STRING
* | [--->] IV_SOURCE_NAME                 TYPE        STRING
* | [--->] IT_FILTER_SELECT_OPTIONS       TYPE        /IWBEP/T_MGW_SELECT_OPTION
* | [--->] IS_PAGING                      TYPE        /IWBEP/S_MGW_PAGING
* | [--->] IT_KEY_TAB                     TYPE        /IWBEP/T_MGW_NAME_VALUE_PAIR
* | [--->] IT_NAVIGATION_PATH             TYPE        /IWBEP/T_MGW_NAVIGATION_PATH
* | [--->] IT_ORDER                       TYPE        /IWBEP/T_MGW_SORTING_ORDER
* | [--->] IV_FILTER_STRING               TYPE        STRING
* | [--->] IV_SEARCH_STRING               TYPE        STRING
* | [--->] IO_TECH_REQUEST_CONTEXT        TYPE REF TO /IWBEP/IF_MGW_REQ_ENTITYSET(optional)
* | [<---] ET_ENTITYSET                   TYPE        YCL_YGW_SFLIGHT_MPC=>TT_SFLIGHT
* | [<---] ES_RESPONSE_CONTEXT            TYPE        /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
* | [!CX!] /IWBEP/CX_MGW_BUSI_EXCEPTION
* | [!CX!] /IWBEP/CX_MGW_TECH_EXCEPTION
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD sflightset_get_entityset.
    DATA:
      lr_entityset TYPE REF TO data,
      lo_message_container TYPE REF TO /iwbep/if_message_container,
      lex_create_object_error TYPE REF TO cx_sy_create_object_error.
    FIELD-SYMBOLS:
      <fs_entityset> TYPE ycl_ygw_sflight_mpc=>tt_sflight.
    CLEAR et_entityset.

    DATA:
      lo_facade         TYPE REF TO /iwbep/if_mgw_dp_int_facade,
      lt_client_headers TYPE tihttpnvp.

    lo_facade ?= /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
    lt_client_headers = lo_facade->get_request_header( ).
    DATA ls_client_headers TYPE ihttpnvp.
    READ TABLE lt_client_headers WITH KEY name = 'token'
         INTO  ls_client_headers.
    IF ycl_token=>validate( token =  ls_client_headers-value ) EQ abap_true.

      TRY.
          get_class_instance( iv_entity_name )->/iwbep/if_mgw_appl_srv_runtime~get_entityset(
          EXPORTING
              iv_entity_name           = iv_entity_name
              iv_entity_set_name       = iv_entity_set_name
              iv_source_name           = iv_source_name
              it_filter_select_options = it_filter_select_options
              it_order                 = it_order
              is_paging                = is_paging
              it_navigation_path       = it_navigation_path
              it_key_tab               = it_key_tab
              iv_filter_string         = iv_filter_string
              iv_search_string         = iv_search_string
              io_tech_request_context  = io_tech_request_context
          IMPORTING
              er_entityset             = lr_entityset
              es_response_context      = es_response_context
          ).
        CATCH cx_sy_create_object_error INTO lex_create_object_error.
          DATA:
            lv_msg_text TYPE bapi_msg.
          lv_msg_text = lex_create_object_error->get_text( ).
          lo_message_container = me->/iwbep/if_mgw_conv_srv_runtime~get_message_container( ).
          lo_message_container->add_message(
            EXPORTING
              iv_msg_type               = 'E'            " Message Type
              iv_msg_id                 = 'SY'           " Message Class
              iv_msg_number             = 2              " Message Number
              iv_msg_text               = lv_msg_text    " Message Text
          ).

          RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
            EXPORTING
              textid            = /iwbep/cx_mgw_tech_exception=>internal_error
              message_container = lo_message_container.

      ENDTRY.

      ASSIGN lr_entityset->* TO <fs_entityset>.
      IF <fs_entityset> IS ASSIGNED.
        et_entityset = <fs_entityset>.
      ENDIF.
    ELSE.
      CONSTANTS : lc_unauthorized TYPE /iwbep/mgw_http_status_code VALUE '403'.
      DATA:
        ls_message type SCX_T100KEY.
      ls_message-attr1 = 'Token is expired'.
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
        EXPORTING
          http_status_code = lc_unauthorized
          textid           = ls_message.
    ENDIF.
  ENDMETHOD.                    "SFLIGHTSET_GET_ENTITYSET
ENDCLASS.